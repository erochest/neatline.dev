---
- hosts: all
  vars:
    db_user: root
    db_password:
    omeka_db_user: omeka
    omeka_db_password: omeka
    omeka_db_name: omeka
    dev_hostname: omeka-neatline.dev
    omeka_dir: /Users/err8n/omeka/neatlinedev
    omeka_version: stable-2.1
    debug: true
    neatline_repo: git@github.com:scholarslab/Neatline.git
  tasks:
    - name: Tap PHP kegs.
      homebrew_tap: tap=homebrew/php state=present
    - name: Install homebrew packages
      homebrew: name={{ item }} state=latest update_homebrew=yes
      with_items:
        - mysql
        - imagemagick
        - git
        - git-flow
        - node
        - phantomjs
    - name: Start MySQL
      shell: mysql.server start
    - name: Install Python MySQLdb
      pip: name=MySQL-python state=latest
    - name: Create Omeka DB user
      mysql_user: >
        name={{ omeka_db_user }}
        password={{ omeka_db_password }}
        state=present
        priv=*.*:ALL
        login_user={{ db_user }}
        login_password={{ db_password }}
    - name: Create Omeka DB
      mysql_db: >
        name={{ omeka_db_name }}
        login_user={{ omeka_db_user }}
        login_password={{ omeka_db_password }}
        state=present
    - name: Create Omeka test DB
      mysql_db: >
        name=test_{{ omeka_db_name }}
        login_user={{ omeka_db_user }}
        login_password={{ omeka_db_password }}
        state=present
    - name: Add {{ dev_hostname }} to /etc/hosts
      lineinfile: >
        dest=/private/etc/hosts
        insertafter=EOF
        line="127.0.0.1    {{ dev_hostname }}"
        state=present
      sudo: yes
    - name: Enable mod php5 for Apache
      lineinfile: >
        dest=/private/etc/apache2/httpd.conf
        line="\1"
        regexp="#(LoadModule php5_module libexec/apache2/libphp5\.so)"
        backrefs=yes
        state=present
      sudo: yes
    - name: Enable index.php
      lineinfile: >
        dest=/private/etc/apache2/httpd.conf
        line="\1 index.php"
        regexp="^(\s*DirectoryIndex index.html)$"
        backrefs=yes
        state=present
      sudo: yes
    - name: AllowOverride All
      script: scripts/allowoverride.py /private/etc/apache2/httpd.conf
      sudo: yes
    - name: Enable Virtual Hosts
      lineinfile: >
        dest=/private/etc/apache2/httpd.conf
        line="\1"
        regexp="#(Include /private/etc/apache2/extra/httpd-vhosts.conf)"
        backrefs=yes
        state=present
      sudo: yes
    - name: Set up the Virtual Host
      script: scripts/vhost.py /private/etc/apache2/extra/httpd-vhosts.conf {{ dev_hostname }} {{ omeka_dir }}
      sudo: yes
    - name: Restart Apache
      shell: apachectl restart
      sudo: yes
    - name: Download Omeka
      git: >
        repo=https://github.com/omeka/Omeka.git
        version={{ omeka_version }}
        dest={{ omeka_dir }}
        recursive=yes
    - name: omeka/db.ini
      template: src=templates/db.ini.j2 dest={{ omeka_dir }}/db.ini
    - name: cp config.ini
      command: cp {{ omeka_dir }}/application/config/config.ini.changeme {{ omeka_dir }}/application/config/config.ini
    - name: config.ini debug
      ini_file: >
        dest={{ omeka_dir }}/application/config/config.ini
        section=site
        option=debug.exceptions
        value={{ debug }}
    - name: cp tests/config.ini
      command: cp {{ omeka_dir }}/application/tests/config.ini.changeme {{ omeka_dir }}/application/tests/config.ini
    - name: tests/config.ini db.username
      ini_file: >
        dest={{ omeka_dir }}/application/tests/config.ini
        section=testing
        option=db.username
        value={{ omeka_db_name }}
    - name: tests/config.ini db.password
      ini_file: >
        dest={{ omeka_dir }}/application/tests/config.ini
        section=testing
        option=db.password
        value={{ omeka_db_password }}
    - name: tests/config.ini db.dbname
      ini_file: >
        dest={{ omeka_dir }}/application/tests/config.ini
        section=testing
        option=db.dbname
        value=test_{{ omeka_db_name }}
    - name: .htaccess
      command: cp {{ omeka_dir }}/.htaccess.changeme {{ omeka_dir }}/.htaccess
    - name: MySQL socket fix
      lineinfile: >
        dest="{{ omeka_dir }}/.htaccess"
        insertafter="^<IfModule mod_php5.c>"
        line='    php_value mysqli.default_socket "/tmp/mysql.sock"'
    - name: APPLICATION_ENV
      lineinfile: >
        dest={{ omeka_dir }}/.htaccess
        backrefs=yes
        regexp='# (SetEnv APPLICATION_ENV .*)'
        line='\1'
    - name: files
      file: path={{ omeka_dir }}/files recurse=yes mode=0777
    - name: Download Neatline
      git: >
        repo="{{ neatline_repo }}"
        dest="{{ omeka_dir }}/plugins/Neatline"
        recursive=yes
    - name: git checkout develop
      command: git checkout develop chdir="{{ omeka_dir }}/plugins/Neatline"
    - name: git flow init
      command: git flow init -d chdir="{{ omeka_dir }}/plugins/Neatline"
    - name: Install JS Tools
      npm: name={{ item }} global=yes
      with_items:
        - grunt-cli
        - bower
    - name: Install JS dependencies
      npm: path="{{ omeka_dir }}/plugins/Neatline"
    - name: Install JS packages
      shell: bower install chdir="{{ omeka_dir }}/plugins/Neatline"
    - name: Install composer
      shell: >
        curl -sS https://getcomposer.org/installer | php
        chdir="{{ omeka_dir }}/plugins/Neatline"
        creates="{{ omeka_dir }}/plugins/Neatline/composer.phar"
    - name: composer install
      shell: >
        php composer.phar install
        chdir="{{ omeka_dir }}/plugins/Neatline"
